@page
@model GeoBAM.Pages.homeModel
@{
    ViewData["Title"] = "Ajouter un point";
}

@{
    if (User.Identity.IsAuthenticated)
    { <!--Si l'utilisateur est connecté, on affiche ceci -->
        <!--On importe les pages css et les script js Leaflet nécéssaire pour la carte -->
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.5.1/dist/leaflet.css" integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==" crossorigin="" />
        <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css">
        <link rel="stylesheet" href="~/css/leaflet-geoman.css" />
        <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
        <script type='text/javascript' src='https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js'></script>
        <script src="~/js/leaflet-geoman.min.js"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.css" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/0.4.2/leaflet.draw.js"></script>
        <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css">

        <!--Un boutton Ma Position, dont l'action ONCLICK execute la focntion getLocation()-->
        <button type="button" class="btn btn-dark" onclick="getLocation()">Ma position</button>
        
        <!--On crée un container Div, qui servira à contenir la carte (NB: cette création doit etre avant le code js) -->
        <div id="map" style="height:400px;"></div>

        <!--On écrit le script javascript pour la gestion de la carte  -->
        <script>
            // Déclaration d'une variable map, pour pouvoir initialiser notre carte!
            var map = L.map('map').setView([31.792306, -7.080168], 6);  //SetView sert à définir la vue initiale
            //On ajoute le layer control
            var osm = L.tileLayer("http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"),
                mqi = L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}");

            var baseMaps = {
                "OpenStreetMap": osm,
                "MapQuestImagery": mqi
            };

            var overlays = {//add any overlays here

            };

            L.control.layers(baseMaps, overlays, { position: 'bottomleft' }).addTo(map);
           
            // FeatureGroup pour stocker les couches modifiables !
            var drawnItems = new L.FeatureGroup();
            map.addLayer(drawnItems);
            var drawControl = new L.Control.Draw({
                edit: {
                    featureGroup: drawnItems
                }
            });
            map.addControl(drawControl);


            // Ajouter le schéma tracé à la couche de la carte!
            map.on('draw:created', function (event) {
                var type = event.layerType,
                    layer = event.layer;
                var layer = event.layer,
                    feature = layer.feature = layer.feature || {};
                feature.type = feature.type || "Feature";
                var props = feature.properties = feature.properties || {};
                drawnItems.addLayer(layer);
                if (type == 'Point') {
                    // Les actions spécéfiques à un marqueurs
                    // On l'ajoute à la table AddedPoints!

                    var lat = layer.getLatLng().lat;
                    var lng = layer.getLatLng().lng;
                    //on ajoute une popup !
                    layer.bindPopup("<p>" + lat + "," + lng + "</p>").openPopup();

                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());

                }
                if (type == 'Polygon') {
                    // La meme chose pour un polygone
                    console.log(JSON.stringify(drawnItems.toGeoJSON()));
                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());

                }
                if (type == 'circlemarker') {
                    // La meme chose pour un cercle
                    console.log(JSON.stringify(drawnItems.toGeoJSON()));
                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());
                    var lat = layer.getLatLng().lat;
                    var lng = layer.getLatLng().lng;
                    //on ajoute une popup !
                    layer.bindPopup("<p>" + lat + "," + lng + "</p>").openPopup();

                }

                drawnItems.addLayer(layer);
                map.addLayer(layer);
                document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());
                console.log("type de donne:" + type);
            });

            //On spécifie les actions à faire lorsque un nouveau objet est dessiné!
            map.on(L.Draw.Event.CREATED, function (e) {
                var type = e.layerType,
                    layer = e.layer;
                drawnItems.addLayer(layer);
                if (type == 'marker') {
                    // Les actions spécéfiques à un marqueurs


                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());
                    document.getElementById("DataType").value = 'Point';
                }
                if (type == 'polygon') {
                    // La meme chose pour un polygone
                    console.log(JSON.stringify(drawnItems.toGeoJSON()));
                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());
                    document.getElementById("DataType").value = 'Polygone';

                }
                if (layer instanceof L.Circle) {
                    // La meme chose pour un cercle
                    const json = layer.toGeoJSON();


                    json.properties.radius = layer.getRadius();


                    document.getElementById("geoJson").value = JSON.stringify(json);
                    document.getElementById("DataType").value = 'Cercle';

                }
                if (type == 'rectangle') {
                    // La meme chose pour un rectangle

                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());
                    document.getElementById("DataType").value = 'Rectangle';
                }
                // On ajoute le layer à la carte
                map.addLayer(layer);
                document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());

            });

            map.on('draw:edited', function (e) {
                var layers = e.layers;
                layers.eachLayer(function (layer) {
                    //Actions spécéfiques apès modification d'un layer!
                });
            });

            //On définit la fonction getLocation
            function getLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(showPosition);
                } else {
                    Alert("Le service de Géolocalisation n'est pas disponible sur ce navigateur");
                }

            }
            function showPosition(position) {


                // on change la vue dans la carte en passant en paramètre les coordonnées de l'utilisateur!
                map.setView([position.coords.latitude, position.coords.longitude], 16),
                    marker = L.marker([position.coords.latitude, position.coords.longitude]).addTo(map),
                    marker.bindPopup("<p>Vous etes là!</p> <p>" + position.coords.latitude + "," + position.coords.longitude + "</p>");
                //On prepare les données de localisation pour les envoyer vers la page d'Ajout!
                document.getElementById("geoJson").value = JSON.stringify(marker.toGeoJSON());
                document.getElementById("DataType").value = 'Point';



            }


        </script>
        <!-- Code ) supprimer-->
        <!--<div id="mapid" style="width: 800px; height: 600px; border: 1px solid #ccc"></div>

        <script>
            var osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
                osmAttrib = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
                osm = L.tileLayer(osmUrl, { maxZoom: 18, attribution: osmAttrib }),
                mapid = new L.Map('mapid', { center: new L.LatLng(51.505, -0.04), zoom: 13 }),
                drawnItems = L.featureGroup().addTo(mapid);
            L.control.layers({
                'osm': osm.addTo(mapid),
                "google": L.tileLayer('http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}', {
                    attribution: 'google'
                })
            }, { 'drawlayer': drawnItems }, { position: 'topleft', collapsed: false }).addTo(mapid);
            mapid.addControl(new L.Control.Draw({
                edit: {
                    featureGroup: drawnItems,
                    poly: {
                        allowIntersection: true
                    }
                },
                draw: {
                    polygon: {
                        allowIntersection: true,
                        showArea: true
                    }
                }
            }));

            mapid.on(L.Draw.Event.CREATED, function (event) {
                var layer = event.layer;
                var type = event.layerType,
                    layer = event.layer;
                if (type == 'marker') {
                    // Les actions spécéfiques à un marqueurs
                    // On l'ajoute à la table AddedPoints!
                    console.log(JSON.stringify(drawnItems.toGeoJSON()));
                    var lat = e.latlng.lat;
                    var lng = e.latlng.lng;
                    document.getElementById("latitude1").value = lat;
                    document.getElementById("longitude1").value = lng;
                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());

                }
                if (type == 'polygon') {
                    // La meme chose pour un polygone
                    console.log(JSON.stringify(drawnItems.toGeoJSON()));
                    document.getElementbyId("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());

                }
                if (type == 'circle') {
                    // La meme chose pour un cercle
                    console.log(JSON.stringify(drawnItems.toGeoJSON()));
                    document.getElementById("geoJson").value = JSON.stringify(drawnItems.toGeoJSON());

                }
                drawnItems.addLayer(layer);
            });

        </script> -->
        <!--fin-->
        <span asp-validation-for="Input.DataType" class="text-danger"></span>
        <span asp-validation-for="Input.geoJson" class="text-danger"></span>

        <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">

            <!-- On ajoute ce formulalre caché pour envoyer les données vers la page d'ajout'-->
            <form method="post">

                <input asp-for="Input.DataType" class="form-control" hidden name="DataType" id="DataType" />

                <input asp-for="Input.geoJson" class="form-control" hidden name="geoJson" id="geoJson" />

                <input type="submit" class="btn btn-success" style="font-size:13px; background-color:limegreen;" value="Ajouter" name="Ajouter à la base de données" asp-page="/POImanager/Create">
                <!-- <input type="submit" class="btn btn-primary" value="Ajouter" name="Ajouter à la base de données" asp-page="/AddPoint"> -->
            </form>
        </div>

    }
    else
    { <!-- Si l'utilisateur n'est pas connecté, on lui demande de se connecter d'abord ! -->
        <p>Connectez-vous d'abord pour accèdez à cette page</p>
        <a class="nav-link text-dark" asp-area="" asp-page="/Index">Revenir à l'Acceuil</a>
    }
}

